volumes:
  db_clients:
    driver: local
  db_auth:
    driver: local
  db_besoins:
    driver: local
  db_services:
    driver: local
  db_competences:
    driver: local
  db_salaries:
    driver: local

networks:
  serviceDating:
    driver: bridge

services:

  frontend:
    image: node:22
    restart: always
    ports:
      - '40025:5173'
    working_dir: /app
    volumes:
      - ./Frontend/app:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev -- --host"
    networks:
      - serviceDating

  adminer:
    image: adminer
    restart: always
    ports:
    - '40026:8080'
    networks:
      - serviceDating
    command: 'php -S 0.0.0.0:8080 -t /var/www/html'

  ################################
  #              AUTH            #
  ################################
  api_auth:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    restart: always
    ports:
      - '40012:80'
    volumes:
      - ./api_auth/app/:/var/php/
    env_file:
      - ./env/api.env
    working_dir: /var/php
    networks:
      - serviceDating
    command: php -S 0.0.0.0:80 -t /var/php

  auth.db:
    image: 'postgres:latest'
    restart: always
    env_file: ./authdb.env
    ports:
      - '40013:5432'
    volumes:
      - db_auth:/var/lib/postgresql/data
    networks:
      - serviceDating

  ################################
  #          clients             #
  ################################
  api_clients:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    restart: always
    ports:
      - '40014:80'
    working_dir: /var/php
    volumes:
      - ./api_clients/app/:/var/php/
    networks:
      - serviceDating
    command: php -S 0.0.0.0:80 -t /var/php

  db_clients:
    image: 'postgres:latest'
    restart: always
    env_file: ./env/db.env
    ports:
      - '40015:5432'
    volumes:
      - db_clients:/var/lib/postgresql/data
    networks:
      - serviceDating

  ################################
  #          besoins             #
  ################################
  api_besoins:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    restart: always
    ports:
      - '40016:80'
    working_dir: /var/php
    volumes:
      - ./api_besoins/app/:/var/php/
    networks:
      - serviceDating
    command: php -S 0.0.0.0:80 -t /var/php/public

  db_besoins:
    image: 'postgres:latest'
    restart: always
    env_file: ./env/db.env
    ports:
      - '40017:5432'
    volumes:
      - db_besoins:/var/lib/postgresql/data
    networks:
      - serviceDating
  
  ################################
  #          services            #
  ################################
  api_services:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    restart: always
    ports:
      - '40018:80'
    working_dir: /var/php
    volumes:
      - ./api_services/app/:/var/php/
    networks:
      - serviceDating
    command: php -S 0.0.0.0:80 -t /var/php

  db_services:
    image: 'postgres:latest'
    restart: always
    env_file: ./env/db.env
    ports:
      - '40019:5432'
    volumes:
      - db_services:/var/lib/postgresql/data
    networks:
      - serviceDating

  ################################
  #          compétences         #
  ################################
  api_competences:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    restart: always
    ports:
      - '40020:80'
    working_dir: /var/php
    volumes:
      - ./api_competences/app/:/var/php/
    networks:
      - serviceDating
    command: php -S 0.0.0.0:80 -t /var/php

  db_competences:
    image: 'postgres:latest'
    restart: always
    env_file: ./env/db.env
    ports:
      - '40021:5432'
    volumes:
      - db_competences:/var/lib/postgresql/data
    networks:
      - serviceDating

  ################################
  #          salariés            #
  ################################
  api_salaries:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    restart: always
    ports:
      - '40022:80'
    working_dir: /var/php
    volumes:
      - ./api_salaries/app/:/var/php/
    networks:
      - serviceDating
    command: php -S 0.0.0.0:80 -t /var/php

  db_salaries:
    image: 'postgres:latest'
    restart: always
    env_file: ./env/db.env
    ports:
      - '40023:5432'
    volumes:
      - db_salaries:/var/lib/postgresql/data
    networks:
      - serviceDating

  ################################
  #           GATEWAY            #
  ################################
  gateway:
    build:
      context: build
      dockerfile: 8.3-cli.Dockerfile
    restart: always
    ports:
      - '40024:80'
    volumes:
      - ./gateway/app/:/var/php/
    working_dir: /var/php
    networks:
      - serviceDating
    command: php -S 0.0.0.0:80 -t /var/php